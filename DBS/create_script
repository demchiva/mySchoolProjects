-- Generated by Oracle SQL Developer Data Modeler 4.0.0.833
--   at:        2018-04-11 20:43:56 CEST
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g
set echo on

prompt #---------------------#
prompt #- Pomocne procedury -#
prompt #---------------------#

create or replace procedure SMAZ_VSECHNY_TABULKY AS
-- pokud v logu bude uvedeno, ze nektery objekt nebyl zrusen, protoze na nej jiny jeste existujici objekt stavi, spust proceduru opakovane, dokud se nezrusi vse
begin
  for iRec in 
    (select distinct OBJECT_TYPE, OBJECT_NAME,
      'drop '||OBJECT_TYPE||' "'||OBJECT_NAME||'"'||
      case OBJECT_TYPE when 'TABLE' then ' cascade constraints purge' else ' ' end as PRIKAZ
    from USER_OBJECTS where OBJECT_NAME not in ('SMAZ_VSECHNY_TABULKY', 'VYPNI_CIZI_KLICE', 'ZAPNI_CIZI_KLICE', 'VYMAZ_DATA_VSECH_TABULEK')
    ) loop
        begin
          dbms_output.put_line('Prikaz: '||irec.prikaz);
        execute immediate iRec.prikaz;
        exception
          when others then dbms_output.put_line('NEPOVEDLO SE!');
        end;
      end loop;
end;
/

create or replace procedure VYPNI_CIZI_KLICE as 
begin
  for cur in (select CONSTRAINT_NAME, TABLE_NAME from USER_CONSTRAINTS where CONSTRAINT_TYPE = 'R' ) 
  loop
    execute immediate 'alter table '||cur.TABLE_NAME||' modify constraint "'||cur.CONSTRAINT_NAME||'" DISABLE';
  end loop;
end VYPNI_CIZI_KLICE;
/


create or replace procedure ZAPNI_CIZI_KLICE as 
begin
  for cur in (select CONSTRAINT_NAME, TABLE_NAME from USER_CONSTRAINTS where CONSTRAINT_TYPE = 'R' ) 
  loop
    execute immediate 'alter table '||cur.TABLE_NAME||' modify constraint "'||cur.CONSTRAINT_NAME||'" enable validate';
  end loop;
end ZAPNI_CIZI_KLICE;
/

create or replace procedure VYMAZ_DATA_VSECH_TABULEK is
begin
  -- Vymazat data vsech tabulek
  VYPNI_CIZI_KLICE;
  for v_rec in (select distinct TABLE_NAME from USER_TABLES)
  loop
    execute immediate 'truncate table '||v_rec.TABLE_NAME||' drop storage';
  end loop;
  ZAPNI_CIZI_KLICE;
  
  -- Nastavit vsechny sekvence od 1
  for v_rec in (select distinct SEQUENCE_NAME  from USER_SEQUENCES)
  loop
    execute immediate 'alter sequence '||v_rec.SEQUENCE_NAME||' restart start with 1';
  end loop;
end VYMAZ_DATA_VSECH_TABULEK;
/

prompt #------------------------#
prompt #- Zrusit stare tabulky -#
prompt #------------------------#

exec SMAZ_VSECHNY_TABULKY;

prompt #-------------------------#
prompt #- Vytvorit nove tabulky -#
prompt #-------------------------#

CREATE TABLE Adresa
  (
    adresa_key INTEGER NOT NULL ,
    stat       CHAR (20 CHAR) NOT NULL ,
    mesto      CHAR (30 CHAR) NOT NULL ,
    ulice      CHAR (30 CHAR) NOT NULL ,
    cislo_domu INTEGER NOT NULL
  ) ;
ALTER TABLE Adresa ADD CONSTRAINT Adresa_PK PRIMARY KEY ( adresa_key ) ;

CREATE TABLE Nova_zahrada
  (
    datum_nastupu     DATE NOT NULL ,
    Sluzba_Sluzba_key INTEGER NOT NULL ,
    Adresa_adresa_key INTEGER NOT NULL
  ) ;
ALTER TABLE Nova_zahrada ADD CONSTRAINT Nova_zahrada_PK PRIMARY KEY ( Sluzba_Sluzba_key ) ;

CREATE TABLE Novy_byt
  (
    datum_nastupu     DATE NOT NULL ,
    Sluzba_Sluzba_key INTEGER NOT NULL ,
    Adresa_adresa_key INTEGER NOT NULL
  ) ;
ALTER TABLE Novy_byt ADD CONSTRAINT Novy_byt_PK PRIMARY KEY ( Sluzba_Sluzba_key ) ;

CREATE TABLE Obednavka
  (
    Obednavka_key               INTEGER NOT NULL ,
    cena                        INTEGER NOT NULL ,
    datum                       DATE NOT NULL ,
    Zamestnanec_Zamestnanec_key INTEGER NOT NULL ,
    Zakaznik_Zakaznik_key       INTEGER NOT NULL
  ) ;
ALTER TABLE Obednavka ADD CONSTRAINT Obednavka_PK PRIMARY KEY ( Obednavka_key ) ;

CREATE TABLE Planeta
  (
    Planeta_key           INTEGER NOT NULL ,
    nazev                 VARCHAR2 (100 CHAR) NOT NULL ,
    kolonizace            CHAR (1) NOT NULL ,
    Soustava_Soustava_key INTEGER NOT NULL
  ) ;
ALTER TABLE Planeta ADD CONSTRAINT Planeta_PK PRIMARY KEY ( Planeta_key ) ;

CREATE TABLE Pobocka
  (
    Pobocka_key       INTEGER NOT NULL ,
    nazev             VARCHAR2 (30 CHAR) NOT NULL ,
    Adresa_adresa_key INTEGER NOT NULL
  ) ;
ALTER TABLE Pobocka ADD CONSTRAINT Pobocka_PK PRIMARY KEY ( Pobocka_key ) ;

CREATE TABLE Pozemek
  (
    vesmirni_gps      INTEGER NOT NULL ,
    Sluzba_Sluzba_key INTEGER NOT NULL
  ) ;
ALTER TABLE Pozemek ADD CONSTRAINT Pozemek_PK PRIMARY KEY ( Sluzba_Sluzba_key ) ;

CREATE TABLE Sluzba
  (
    Sluzba_key         INTEGER NOT NULL ,
    datum              DATE NOT NULL ,
    Sluzba_typ_Typ_key INTEGER NOT NULL ,
    diskriminator      VARCHAR2 (12 CHAR) NOT NULL
  ) ;
ALTER TABLE Sluzba ADD CONSTRAINT Sluzba_PK PRIMARY KEY ( Sluzba_key ) ;

CREATE TABLE Sluzba_typ
  (
    Typ_key INTEGER NOT NULL ,
    nazev   CHAR (20 CHAR) NOT NULL ,
    popis   VARCHAR2 (200 CHAR)
  ) ;
ALTER TABLE Sluzba_typ ADD CONSTRAINT Sluzba_typ_PK PRIMARY KEY ( Typ_key ) ;

CREATE TABLE Soustava
  (
    Soustava_key INTEGER NOT NULL ,
    nazev        VARCHAR2 (100 CHAR) NOT NULL
  ) ;
ALTER TABLE Soustava ADD CONSTRAINT Soustava_PK PRIMARY KEY ( Soustava_key ) ;

CREATE TABLE Stavba
  (
    vesmirni_gps      INTEGER NOT NULL ,
    datum_ukonceni    DATE ,
    Sluzba_Sluzba_key INTEGER NOT NULL
  ) ;
ALTER TABLE Stavba ADD CONSTRAINT Stavba_PK PRIMARY KEY ( Sluzba_Sluzba_key ) ;

CREATE TABLE Zakaznik
  (
    Zakaznik_key  INTEGER NOT NULL ,
    Zakaznik_TYPE VARCHAR2 (13) NOT NULL ,
    nazev         VARCHAR2 (100 CHAR) ,
    telefon       INTEGER ,
    jmeno         CHAR (20 CHAR) ,
    prijmeni      CHAR (30 CHAR) ,
    telefon1      INTEGER ,
    email         VARCHAR2 (100 CHAR)
  ) ;
ALTER TABLE Zakaznik ADD CONSTRAINT CH_INH_Zakaznik CHECK ( Zakaznik_TYPE IN ('Firma', 'Fizycka_osoba')) ;
ALTER TABLE Zakaznik ADD CONSTRAINT Zakaznik_ExDep CHECK ( (Zakaznik_TYPE = 'Firma' AND jmeno IS NULL AND prijmeni IS NULL AND telefon1 IS NULL AND email IS NULL AND nazev IS NOT NULL AND telefon IS NOT NULL) OR (Zakaznik_TYPE = 'Fizycka_osoba' AND jmeno IS NOT NULL AND prijmeni IS NOT NULL AND nazev IS NULL AND telefon IS NULL)) ;
ALTER TABLE Zakaznik ADD CONSTRAINT Zakaznik_PK PRIMARY KEY ( Zakaznik_key ) ;

CREATE TABLE Zamestnanec
  (
    Zamestnanec_key     INTEGER NOT NULL ,
    osobni_cislo        INTEGER NOT NULL ,
    jmeno               VARCHAR2 (100 CHAR) NOT NULL ,
    prijmeni            VARCHAR2 (100 CHAR) NOT NULL ,
    Pobocka_Pobocka_key INTEGER NOT NULL
  ) ;
ALTER TABLE Zamestnanec ADD CONSTRAINT Zamestnanec_PK PRIMARY KEY ( Zamestnanec_key ) ;

CREATE TABLE je_socasti
  (
    Sluzba_Sluzba_key       INTEGER NOT NULL ,
    Obednavka_Obednavka_key INTEGER NOT NULL
  ) ;
ALTER TABLE je_socasti ADD CONSTRAINT je_socasti__IDX PRIMARY KEY ( Sluzba_Sluzba_key, Obednavka_Obednavka_key ) ;

CREATE TABLE nachazi_se_na_planete
  (
    Planeta_Planeta_key INTEGER NOT NULL ,
    Adresa_adresa_key   INTEGER NOT NULL
  ) ;
ALTER TABLE nachazi_se_na_planete ADD CONSTRAINT nachazi_se_na_planete__IDX PRIMARY KEY ( Planeta_Planeta_key, Adresa_adresa_key ) ;

ALTER TABLE nachazi_se_na_planete ADD CONSTRAINT FK_ASS_13 FOREIGN KEY ( Planeta_Planeta_key ) REFERENCES Planeta ( Planeta_key ) ;

ALTER TABLE nachazi_se_na_planete ADD CONSTRAINT FK_ASS_14 FOREIGN KEY ( Adresa_adresa_key ) REFERENCES Adresa ( adresa_key ) ;

ALTER TABLE je_socasti ADD CONSTRAINT FK_ASS_7 FOREIGN KEY ( Sluzba_Sluzba_key ) REFERENCES Sluzba ( Sluzba_key ) ;

ALTER TABLE je_socasti ADD CONSTRAINT FK_ASS_8 FOREIGN KEY ( Obednavka_Obednavka_key ) REFERENCES Obednavka ( Obednavka_key ) ;

ALTER TABLE Nova_zahrada ADD CONSTRAINT Nova_zahrada_Adresa_FK FOREIGN KEY ( Adresa_adresa_key ) REFERENCES Adresa ( adresa_key ) ;

ALTER TABLE Nova_zahrada ADD CONSTRAINT Nova_zahrada_Sluzba_FK FOREIGN KEY ( Sluzba_Sluzba_key ) REFERENCES Sluzba ( Sluzba_key ) ;

ALTER TABLE Novy_byt ADD CONSTRAINT Novy_byt_Adresa_FK FOREIGN KEY ( Adresa_adresa_key ) REFERENCES Adresa ( adresa_key ) ;

ALTER TABLE Novy_byt ADD CONSTRAINT Novy_byt_Sluzba_FK FOREIGN KEY ( Sluzba_Sluzba_key ) REFERENCES Sluzba ( Sluzba_key ) ;

ALTER TABLE Obednavka ADD CONSTRAINT Obednavka_Zakaznik_FK FOREIGN KEY ( Zakaznik_Zakaznik_key ) REFERENCES Zakaznik ( Zakaznik_key ) ;

ALTER TABLE Obednavka ADD CONSTRAINT Obednavka_Zamestnanec_FK FOREIGN KEY ( Zamestnanec_Zamestnanec_key ) REFERENCES Zamestnanec ( Zamestnanec_key ) ;

ALTER TABLE Planeta ADD CONSTRAINT Planeta_Soustava_FK FOREIGN KEY ( Soustava_Soustava_key ) REFERENCES Soustava ( Soustava_key ) ;

ALTER TABLE Pobocka ADD CONSTRAINT Pobocka_Adresa_FK FOREIGN KEY ( Adresa_adresa_key ) REFERENCES Adresa ( adresa_key ) ;

ALTER TABLE Pozemek ADD CONSTRAINT Pozemek_Sluzba_FK FOREIGN KEY ( Sluzba_Sluzba_key ) REFERENCES Sluzba ( Sluzba_key ) ;

ALTER TABLE Sluzba ADD CONSTRAINT Sluzba_Sluzba_typ_FK FOREIGN KEY ( Sluzba_typ_Typ_key ) REFERENCES Sluzba_typ ( Typ_key ) ;

ALTER TABLE Stavba ADD CONSTRAINT Stavba_Sluzba_FK FOREIGN KEY ( Sluzba_Sluzba_key ) REFERENCES Sluzba ( Sluzba_key ) ;

ALTER TABLE Zamestnanec ADD CONSTRAINT Zamestnanec_Pobocka_FK FOREIGN KEY ( Pobocka_Pobocka_key ) REFERENCES Pobocka ( Pobocka_key ) ;

CREATE OR REPLACE TRIGGER ARC_FKArc_2_Pozemek BEFORE
  INSERT OR
  UPDATE OF Sluzba_Sluzba_key ON Pozemek FOR EACH ROW DECLARE d VARCHAR2(12 CHAR);
  BEGIN
    SELECT A.diskriminator
    INTO d
    FROM Sluzba A,
      Pozemek B
    WHERE A.Sluzba_key = B.Sluzba_Sluzba_key ;
    IF (d             IS NULL OR d <> 'Pozemek') THEN
      raise_application_error(-20223,'FK Pozemek.Pozemek_Sluzba_FK in Table Pozemek violates Arc constraint on Table Sluzba - only one FK is permitted');
    END IF;
    EXCEPTION
  WHEN NO_DATA_FOUND THEN
    NULL;
  WHEN OTHERS THEN
    RAISE;
  END;
  /
CREATE OR REPLACE TRIGGER ARC_FKArc_2_Stavba BEFORE
  INSERT OR
  UPDATE OF Sluzba_Sluzba_key ON Stavba FOR EACH ROW DECLARE d VARCHAR2(12 CHAR);
  BEGIN
    SELECT A.diskriminator
    INTO d
    FROM Sluzba A,
      Stavba B
    WHERE A.Sluzba_key = B.Sluzba_Sluzba_key ;
    IF (d             IS NULL OR d <> 'Stavba') THEN
      raise_application_error(-20223,'FK Stavba.Stavba_Sluzba_FK in Table Stavba violates Arc constraint on Table Sluzba - only one FK is permitted');
    END IF;
    EXCEPTION
  WHEN NO_DATA_FOUND THEN
    NULL;
  WHEN OTHERS THEN
    RAISE;
  END;
  /
CREATE OR REPLACE TRIGGER ARC_FKArc_2_Novy_byt BEFORE
  INSERT OR
  UPDATE OF Sluzba_Sluzba_key ON Novy_byt FOR EACH ROW DECLARE d VARCHAR2(12 CHAR);
  BEGIN
    SELECT A.diskriminator
    INTO d
    FROM Sluzba A,
      Novy_byt B
    WHERE A.Sluzba_key = B.Sluzba_Sluzba_key ;
    IF (d             IS NULL OR d <> 'Novy_byt') THEN
      raise_application_error(-20223,'FK Novy_byt.Novy_byt_Sluzba_FK in Table Novy_byt violates Arc constraint on Table Sluzba - only one FK is permitted');
    END IF;
    EXCEPTION
  WHEN NO_DATA_FOUND THEN
    NULL;
  WHEN OTHERS THEN
    RAISE;
  END;
  /
CREATE OR REPLACE TRIGGER ARC_FKArc_2_Nova_zahrada BEFORE
  INSERT OR
  UPDATE OF Sluzba_Sluzba_key ON Nova_zahrada FOR EACH ROW DECLARE d VARCHAR2(12 CHAR);
  BEGIN
    SELECT A.diskriminator
    INTO d
    FROM Sluzba A,
      Nova_zahrada B
    WHERE A.Sluzba_key = B.Sluzba_Sluzba_key ;
    IF (d             IS NULL OR d <> 'Nova_zahrada') THEN
      raise_application_error(-20223,'FK Nova_zahrada.Nova_zahrada_Sluzba_FK in Table Nova_zahrada violates Arc constraint on Table Sluzba - only one FK is permitted');
    END IF;
    EXCEPTION
  WHEN NO_DATA_FOUND THEN
    NULL;
  WHEN OTHERS THEN
    RAISE;
  END;
  /

CREATE SEQUENCE Adresa_adresa_key_SEQ START WITH 1 MINVALUE 1 MAXVALUE 1000 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER Adresa_adresa_key_TRG BEFORE
  INSERT ON Adresa FOR EACH ROW WHEN (NEW.adresa_key IS NULL) BEGIN :NEW.adresa_key := Adresa_adresa_key_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE Novy_byt_Sluzba_Sluzba_key_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER Novy_byt_Sluzba_Sluzba_key_TRG BEFORE
  INSERT ON Novy_byt FOR EACH ROW WHEN (NEW.Sluzba_Sluzba_key IS NULL) BEGIN :NEW.Sluzba_Sluzba_key := Novy_byt_Sluzba_Sluzba_key_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE Obednavka_Obednavka_key_SEQ START WITH 1 MINVALUE 1 MAXVALUE 1000 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER Obednavka_Obednavka_key_TRG BEFORE
  INSERT ON Obednavka FOR EACH ROW WHEN (NEW.Obednavka_key IS NULL) BEGIN :NEW.Obednavka_key := Obednavka_Obednavka_key_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE Planeta_Planeta_key_SEQ START WITH 1 MINVALUE 1 MAXVALUE 1000 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER Planeta_Planeta_key_TRG BEFORE
  INSERT ON Planeta FOR EACH ROW WHEN (NEW.Planeta_key IS NULL) BEGIN :NEW.Planeta_key := Planeta_Planeta_key_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE Pobocka_Pobocka_key_SEQ START WITH 1 MINVALUE 1 MAXVALUE 1000 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER Pobocka_Pobocka_key_TRG BEFORE
  INSERT ON Pobocka FOR EACH ROW WHEN (NEW.Pobocka_key IS NULL) BEGIN :NEW.Pobocka_key := Pobocka_Pobocka_key_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE Sluzba_Sluzba_key_SEQ START WITH 1 MINVALUE 1 MAXVALUE 1000 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER Sluzba_Sluzba_key_TRG BEFORE
  INSERT ON Sluzba FOR EACH ROW WHEN (NEW.Sluzba_key IS NULL) BEGIN :NEW.Sluzba_key := Sluzba_Sluzba_key_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE Sluzba_typ_Typ_key_SEQ START WITH 1 MINVALUE 1 MAXVALUE 1000 CYCLE NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER Sluzba_typ_Typ_key_TRG BEFORE
  INSERT ON Sluzba_typ FOR EACH ROW WHEN (NEW.Typ_key IS NULL) BEGIN :NEW.Typ_key := Sluzba_typ_Typ_key_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE Soustava_Soustava_key_SEQ START WITH 1 MINVALUE 1 MAXVALUE 1000 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER Soustava_Soustava_key_TRG BEFORE
  INSERT ON Soustava FOR EACH ROW WHEN (NEW.Soustava_key IS NULL) BEGIN :NEW.Soustava_key := Soustava_Soustava_key_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE Zakaznik_Zakaznik_key_SEQ START WITH 1 MINVALUE 1 MAXVALUE 1000 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER Zakaznik_Zakaznik_key_TRG BEFORE
  INSERT ON Zakaznik FOR EACH ROW WHEN (NEW.Zakaznik_key IS NULL) BEGIN :NEW.Zakaznik_key := Zakaznik_Zakaznik_key_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE Zamestnanec_Zamestnanec_key START WITH 1 MINVALUE 1 MAXVALUE 1000 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER Zamestnanec_Zamestnanec_key BEFORE
  INSERT ON Zamestnanec FOR EACH ROW WHEN (NEW.Zamestnanec_key IS NULL) BEGIN :NEW.Zamestnanec_key := Zamestnanec_Zamestnanec_key.NEXTVAL;
END;
/
CREATE SEQUENCE SEQ_ADRESA_KEY START WITH 1 NOCACHE ORDER ;

CREATE SEQUENCE SEQ_OBEDNAVKA_KEY START WITH 1 NOCACHE ORDER ;

CREATE SEQUENCE SEQ_PLANETA_KEY START WITH 1 NOCACHE ORDER ;

CREATE SEQUENCE SEQ_POBOCKA_KEY START WITH 1 NOCACHE ORDER ;

CREATE SEQUENCE SEQ_SLUZBA_KEY START WITH 1 NOCACHE ORDER ;

CREATE SEQUENCE SEQ_TYP_KEY START WITH 1 NOCACHE ORDER ;

CREATE SEQUENCE SEQ_SOUSTAVA_KEY START WITH 1 NOCACHE ORDER ;

CREATE SEQUENCE SEQ_ZAKAZNIK_KEY START WITH 1 NOCACHE ORDER ;

CREATE SEQUENCE SEQ_ZAMESTNANEC_KEY START WITH 1 NOCACHE ORDER ;


-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            15
-- CREATE INDEX                             0
-- ALTER TABLE                             33
-- CREATE VIEW                              0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                          14
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                         10
-- CREATE MATERIALIZED VIEW                 0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0